2-3树 是最简单的B树：(2-3树是由二节点和三节点构成的树)
1) 2-3树 的所有叶子节点都在同一层。(只要是B树都满足这个条件)
2)有两个子节点的节点叫二节点，二节点要么没有子节点，要么有两个子节点。
3)有三个子节点的节点叫三节点，三节点要么没有子节点，要么有三个子节点。
4)当按照规则插入一个数到某个节点时，不能满足上面三个要求，就需要拆。先向上拆，如果上层满，则拆本层，拆后仍需要满足上面3个条件。
5)对于三节点的子树的值大小仍然遵守(BST 二叉排序树)的规则。
6)B树非叶子节点和叶子节点都存放数据，当查找命中则退出。


------------------------------------------------------------------------
B树变体👇B+树

B+树 元素自底向上插入，这与二叉树恰好相反，B+树更适合文件索引系统：
1)所有真实的数据存放在叶子节点。
2)所有的关键字都出现在叶子节点的链表中。链表中关键字数据是有序的。(稠密索引)
3)不可能在非叶子节点命中数据。在非叶子节点中的数据是索引。(稀疏索引)
4)B树和B+ 在各个场景作用不同。

B+树 理解：把单链表平均分成N份，用B+树进行一个索引，每个节点代表一段数据范围。（每次砍去2/3数据，比二分更强，降低树的高度）


------------------------------------------------------------------------
B+树变体👇B*树

B*树 在对非根和非叶子节点在增加指向兄弟的指针。
1)B*树定义了非叶子节点关键字个数至少为 (2/3)*M,即块的最低使用率为2/3，而B+树块的最低使用率为1/2。
2)B*树分配新节点的概率比B+树要低，空间使用率更高。